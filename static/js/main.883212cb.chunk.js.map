{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","name","useState","Date","now","toString","slice","clockState","setClockState","timerId","useEffect","window","setInterval","date","toLocaleTimeString","console","info","clearInterval","className","App","clockName","setClockName","hasClock","setHasClock","handleKeyDown","e","preventDefault","button","addEventListener","prevCount","value","ref","useRef","current","usePrevious","getRandomName","debug","ReactDOM","render","document","getElementById"],"mappings":"kMAOaA,EAAyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvC,EAAoCC,mBAASC,KAAKC,MAAMC,WAAWC,OAAO,IAA1E,mBAAOC,EAAP,KAAmBC,EAAnB,KAEIC,EAAU,EAcd,OAZAC,qBAAU,WASR,OARAD,EAAUE,OAAOC,aAAY,WAC3B,IAAMC,EAAO,IAAIV,KAEjBK,EAAcK,EAAKC,wBAClB,KAEHC,QAAQC,KAAKT,GAEN,kBAAMU,cAAcR,MAC1B,CAACF,IAGF,sBAAKW,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGjB,IAGF,YAED,sBAAMiB,UAAU,cAAhB,SACGX,Q,MCZF,IAAMY,EAAgB,WAC3B,MAAkCjB,mBAAS,WAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAAgCnB,oBAAS,GAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KAEId,EAAU,EAERe,EAAgB,SAACC,GACrBA,EAAEC,iBAEFH,EAAyB,IAAbE,EAAEE,SAGhBjB,qBAAU,WACRC,OAAOiB,iBAAiB,QAASJ,GACjCb,OAAOiB,iBAAiB,cAAeJ,KACtC,IAEH,IAAMK,EA3BR,SAAqBC,GACnB,IAAMC,EAAMC,iBAAO,WAMnB,OAJAtB,qBAAU,WACRqB,EAAIE,QAAUH,IACb,CAACA,IAEGC,EAAIE,QAoBOC,CAAYd,GAc9B,OAZAV,qBAAU,WASR,OARAD,EAAUE,OAAOC,aAAY,WAC3BS,EArCN,WACE,IAAMS,EAAQ3B,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBwB,GAkCCK,IAETb,GACFP,QAAQqB,MAAR,uBAA8BP,EAA9B,eAA8CT,MAE/C,MAEI,kBAAMH,cAAcR,MAC1B,CAACW,IAGF,sBAAKF,UAAU,MAAf,UACE,6CACCI,GAAY,cAAC,EAAD,CAAOrB,KAAMmB,QCpDhCiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.883212cb.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  name: string;\n};\n\nexport const Clock: React.FC<Props> = ({ name }) => {\n  const [clockState, setClockState] = useState(Date.now().toString().slice(-4));\n\n  let timerId = 0;\n\n  useEffect(() => {\n    timerId = window.setInterval(() => {\n      const date = new Date();\n\n      setClockState(date.toLocaleTimeString());\n    }, 1000);\n\n    console.info(clockState);\n\n    return () => clearInterval(timerId);\n  }, [clockState]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {name}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {clockState}\n      </span>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nfunction usePrevious(value: string) {\n  const ref = useRef('clock-0');\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  let timerId = 0;\n\n  const handleKeyDown = (e: MouseEvent) => {\n    e.preventDefault();\n\n    setHasClock(e.button !== 2);\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', handleKeyDown);\n    window.addEventListener('contextmenu', handleKeyDown);\n  }, []);\n\n  const prevCount = usePrevious(clockName);\n\n  useEffect(() => {\n    timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n\n      if (hasClock) {\n        console.debug(`Renamed from ${prevCount} to ${clockName}`);\n      }\n    }, 3300);\n\n    return () => clearInterval(timerId);\n  }, [clockName]);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      {hasClock && <Clock name={clockName} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}